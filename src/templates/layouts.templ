package templates

import (
  "fmt"
  "time"
)

var year = fmt.Sprintf("%d", time.Now().Year())

templ BaseComponent(title string) {
  <!DOCTYPE html>
  <html lang="en" data-theme="emerald" >

  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>{ title }</title>

    <link rel="stylesheet" href="/assets/css/index.css" />

    <link rel="apple-touch-icon" sizes="180x180" href="/assets/images/favicon/apple-touch-icon.png" />
    <link rel="icon" type="image/png" sizes="32x32" href="/assets/images/favicon/favicon-32x32.png" />
    <link rel="icon" type="image/png" sizes="16x16" href="/assets/images/favicon/favicon-16x16.png" />
    <link rel="manifest" href="/site.webmanifest" />
  </head>

  <body>

    <header>
      <div class="navbar">
        <div class="navbar-start">
          <button class="btn btn-square btn-ghost" _="on click toggle .open on #aside-menu" >
            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" class="inline-block w-5 h-5 stroke-current"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"></path></svg>
          </button>
        </div>
        <div class="navbar-center">
          <a class="text-xl">Cars Hub</a>
        </div>
        <div class="navbar-end">
          <button class="btn btn-ghost btn-circle">
            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z" /></svg>
          </button>
          <button class="btn btn-ghost btn-circle">
            <div class="indicator">
              <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 17h5l-1.405-1.405A2.032 2.032 0 0118 14.158V11a6.002 6.002 0 00-4-5.659V5a2 2 0 10-4 0v.341C7.67 6.165 6 8.388 6 11v3.159c0 .538-.214 1.055-.595 1.436L4 17h5m6 0v1a3 3 0 11-6 0v-1m6 0H9" /></svg>
              <span class="badge badge-xs badge-primary indicator-item"></span>
            </div>
          </button>
        </div>
      </div>
    </header>

    <main hx-ext="response-targets">
      @AsideComponent()

      <div class="content">
        { children... }
      </div>
    </main>

    <footer class="footer footer-center p-4 bg-base-300 text-base-content">
      <div>
        <p>Copyright Â©{year} - All right reserved by ACME Industries Ltd</p>
      </div>
    </footer>

    <script src="https://unpkg.com/htmx.org@1.9.4"></script>
    <script src="https://unpkg.com/hyperscript.org@0.9.12"></script>
    <script src="https://unpkg.com/htmx.org/dist/ext/ws.js"></script>
    <script src="https://unpkg.com/htmx.org@1.9.12/dist/ext/response-targets.js"></script>

    <script src="/assets/js/index.js"></script>
  </body>

  </html>
}

templ AsideComponent() {
  <aside class="open" id="aside-menu" >
    <ul class="menu" >
      <li>
        <a href="/contacts" >Contacts</a>
      </li>
      <li>
        <a href="/manufacturers" >Manufacturers</a>
      </li>
      <li>
        <a href="/brands" >Brands</a>
      </li>
      <li>
        <a href="/car_models" >Car Models</a>
      </li>
      <li>
        <a href="/car_model_versions" >Car Model Versions</a>
      </li>
      <li>
        <a href="/cars" >Cars</a>
      </li>
    </ul>
  </aside>
}

templ NoContent() {
  <template>
  </template>
}

templ WebsocketHtmx() {
  <div hx-ext="ws" ws-connect="/ws?name=manufacturer-form-control">
    <form hx-trigger="load" ws-send>
      <input type="hidden" name="action" value="join-room" />
      <input type="hidden" name="message" value="manufacturer-created" />
    </form>
  </div>
}

templ SelectOption(label string, value string, selected bool) {
  <option
    value={value}
    if (selected) {
      selected="selected"
    }
  >{label}</option>
}

templ SelectComponent(label string, relationshipModel map[string]any, relationshipKey string, models []map[string]interface{} ) {
  <div class="form-control">
    <label class="label" >{label}</label>
    <select class="select select-bordered" name={relationshipKey}>
      <option selected value="0" >Select an {label}</option>
      for _,model := range models {
        <option
          value={fmt.Sprintf("%d", model["ID"])}
          if (model["ID"] == model[relationshipKey] || model["ID"] == relationshipModel["ID"]) {
            selected="selected"
          }
        >{fmt.Sprintf("%s", model["Name"])}</option>
      }
    </select>
  </div>
}

templ UnprocessableEntity(err error) {
  <div class="alert alert-error">
    <div class="flex-1">
      <label>Error</label>
      <p>{err.Error()}</p>
    </div>
  </div>
}